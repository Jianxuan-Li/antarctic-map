# before_script:
stages:
  - build
  - test
  - analyze
  - migrate
  - deploy

build:
  stage: build
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - echo $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - echo $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" docker-compose.yml
    - sed -i "s@__IMAGE_STATICS__@$IMAGE_STATICS@g" docker-compose.yml
    - sed -i "s@__IMAGE_DJANGO__@$IMAGE_DJANGO@g" docker-compose.yml
    - docker-compose build --no-cache antarctic_map_static
    - docker-compose build antarctic_map_django
    - docker push $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
    - docker push $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
  only:
    - master
  tags:
    - build
    - shell

test-django:
  stage: test
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - echo $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - sed -i "s@__ANTARCTIC_MAP_GIS_DATA__@$ANTARCTIC_MAP_GIS_DATA@g" k8s/test.django.yaml
    - sed -i "s@__CODE_PATH__@$(pwd)@g" k8s/test.django.yaml
    - kubectl delete -f k8s/test.django.yaml || echo "Django test job is not exists"
    - kubectl apply -f k8s/test.django.yaml
    - kubectl wait --timeout=300s --for=condition=complete job/antarctic-map-django-test
    - kubectl logs -f jobs/antarctic-map-django-test
    - kubectl delete -f k8s/test.django.yaml
  only:
    - master
  tags:
    - test
    - shell

test-nginx:
  stage: test
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - echo $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
    - sed -i "s@__IMAGE_STATICS__@$IMAGE_STATICS@g" k8s/test.nginx.yaml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" k8s/test.nginx.yaml
    - kubectl delete -f k8s/test.nginx.yaml || echo "Nginx test job is not exists"
    - kubectl apply -f k8s/test.nginx.yaml
    - kubectl wait --timeout=60s --for=condition=complete job/antarctic-map-nginx-test
    - kubectl logs -f jobs/antarctic-map-nginx-test
    - kubectl delete -f k8s/test.nginx.yaml
  only:
    - master
  tags:
    - test
    - shell


analyze:
  stage: analyze
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - echo $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - echo $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
    - CI=true dive $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - CI=true dive $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
  only:
    - master
  tags:
    - build
    - shell

migrate:
  stage: migrate
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - echo $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - echo $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA
    - sed -i "s@__IMAGE_DJANGO__@$IMAGE_DJANGO@g" k8s/migrate.yaml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" k8s/migrate.yaml
    - kubectl delete -f k8s/migrate.yaml || echo "Database migration job is not exists"
    - kubectl apply -f k8s/migrate.yaml
    - kubectl wait --timeout=300s --for=condition=complete jobs/antarctic-map-migrate
    - kubectl logs -f jobs/antarctic-map-migrate
    - kubectl delete -f k8s/migrate.yaml
  only:
    - master
  tags:
    - migrate
    - shell

deploy_prod:
  stage: deploy
  script:
    - echo $IMAGE_DJANGO:$CI_COMMIT_SHORT_SHA
    - echo $IMAGE_STATICS:$CI_COMMIT_SHORT_SHA

    # Backend
    - sed -i "s@__ANTARCTIC_MAP_GIS_DATA__@$ANTARCTIC_MAP_GIS_DATA@g" k8s/deployment.django.yaml
    - sed -i "s@__ANTARCTIC_MAP_WWW_DATA__@$ANTARCTIC_MAP_WWW_DATA@g" k8s/deployment.django.yaml
    - sed -i "s@__IMAGE_DJANGO__@$IMAGE_DJANGO@g" k8s/deployment.django.yaml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" k8s/deployment.django.yaml
    - kubectl apply -f k8s/deployment.django.yaml
    - kubectl apply -f k8s/service.django.yaml

    # Statics
    - sed -i "s@__ANTARCTIC_MAP_DOWNLOAD_DATA__@$ANTARCTIC_MAP_DOWNLOAD_DATA@g" k8s/deployment.statics.yaml
    - sed -i "s@__ANTARCTIC_MAP_GIS_DATA__@$ANTARCTIC_MAP_GIS_DATA@g" k8s/deployment.statics.yaml
    - sed -i "s@__IMAGE_STATICS__@$IMAGE_STATICS@g" k8s/deployment.statics.yaml
    - sed -i "s@__IMAGE_TAG__@$CI_COMMIT_SHORT_SHA@g" k8s/deployment.statics.yaml
    - kubectl apply -f k8s/deployment.statics.yaml
    - kubectl apply -f k8s/service.statics.yaml

    # Clean
    - docker container prune -f
    - docker image prune -a -f
    - echo $CI_COMMIT_SHORT_SHA
  environment:
    name: production
  only:
    - master
  tags:
    - deploy
    - shell
